ARG BASEOS
ARG BASEVER
ARG PG_FULL
ARG IVY_FULL
ARG PREFIX
ARG BASE_IMAGE_NAME
FROM ${BASE_IMAGE_NAME}:${BASEOS}-${IVY_FULL}-${BASEVER} as step1

# For RHEL8 all arguments used in main code has to be specified after FROM
ARG PG_FULL
ARG BASEOS
ARG PACKAGER

# ===== Early lines ordered for leveraging cache, reorder carefully =====
ARG PG_MAJOR
ARG IVY_MAJOR

RUN  ${PACKAGER} -y install \
	ivorysql3-devel-3.0 \
	redhat-rpm-config \
	openssl-devel \
	make \
	&& ${PACKAGER} -y clean all
RUN dnf install -y libxslt tcl
RUN dnf install -y ivorysql3-server-3.0 \
	ivorysql3-contrib-3.0 \
	ivorysql3-plperl-3.0 \
	ivorysql3-plpython3-3.0 \
	ivorysql3-pltcl-3.0
 
ENV IVYROOT="/usr/local/ivorysql/ivorysql-${IVY_MAJOR}" IVYVERSION="${IVY_MAJOR}" 
ENV PATH="${IVYROOT}/bin:${PATH}"

# insatll pgaudit
ADD resource/pgaudit-16.0.tar.gz /
RUN cd pgaudit-16.0 \
        && make install USE_PGXS=1 PG_CONFIG=$IVYROOT/bin/pg_config \
        && rm -rf ../pgaudit-16.0
# insatll pg_cron
ADD resource/pg_cron-1.6.2.tar.gz /
RUN cd pg_cron-1.6.2 \
        && make USE_PGXS=1 PG_CONFIG=$IVYROOT/bin/pg_config \
        && make install USE_PGXS=1 PG_CONFIG=$IVYROOT/bin/pg_config \
        && rm -rf ../pg_cron-1.6.2
# install timescaledb
#ADD resource/timescaledb-2.12.2.tar.gz /
#RUN cd timescaledb-2.12.2 \
#        && ./bootstrap \
#        && cd build \
#        && make PG_CONFIG=$IVYROOT/bin/pg_config \
#        && make install PG_CONFIG=$IVYROOT/bin/pg_config \
#	&& rm -rf ../timescaledb-2.12.2
# install wal2json
ADD resource/wal2json_2_5.tar.gz /
RUN cd wal2json-wal2json_2_5 \
	&& export PATH=$IVYROOT/bin:$PATH \
	&& make \
	&& make install \
	&& rm -rf ../wal2json-wal2json_2_5
# install pgnodemx
ADD resource/pgnodemx-1.6.tar.gz /
RUN cd pgnodemx-1.6 \
	&& make USE_PGXS=1 \
	&& make USE_PGXS=1 install \
	&& rm -rf ../pgnodemx-1.6

###########################################################################
###
###########################################################################
FROM ${BASE_IMAGE_NAME}:${BASEOS}-${IVY_FULL}-${BASEVER}

# For RHEL8 all arguments used in main code has to be specified after FROM
ARG PG_FULL
ARG BASEOS
ARG PACKAGER

# ===== Early lines ordered for leveraging cache, reorder carefully =====
ARG PG_MAJOR
ARG IVY_MAJOR
# Needed due to lack of environment substitution trick on ADD

RUN ${PACKAGER} -y update epel-release \
        && ${PACKAGER} -y install https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm

# Preserving PGVERSION out of paranoia
ENV PGROOT="/usr/pgsql-${PG_MAJOR}" PGVERSION="${PG_MAJOR}" IVYROOT="/usr/local/ivorysql/ivorysql-${IVY_MAJOR}" IVYVERSION="${IVY_MAJOR}" 

ARG PATRONI_VER
ARG BACKREST_VER

# Separate yum run matching postgres-ha image, leverages cached layer
RUN ${PACKAGER} -y install \
                --enablerepo="epel" \
                libicu \
                libxslt \
		tcl \
                openssh-clients \
                openssh-server \
		pgbackrest-${BACKREST_VER} \
                psmisc \
                python3-pip \
                python3-psutil \
                python3-psycopg2 \
                rsync \
                file \
                unzip \
                tar \
                bzip2 \
                lz4 \
                krb5-workstation \
        && ${PACKAGER} -y clean all 

RUN cat /dev/null > /etc/pgbackrest.conf

COPY --from=step1 /usr/local/ivorysql /usr/local/ivorysql/

# install patroni for Kube
RUN pip3 install --upgrade python-dateutil -i https://pypi.douban.com/simple/ \
        && pip3 install patroni[kubernetes]=="${PATRONI_VER}" -i https://pypi.douban.com/simple/

ENV PATH="${IVYROOT}/bin:${PATH}"

LABEL name="ivory" \
        summary="Highgo IvorySQL" \
        description="Ivory ready for production: high availability, disaster recovery, monitoring, security, and performance. Works with IVYO, the open source Ivory Operator from Highgo." \
        io.k8s.description="Highgo IvorySQL is ready for production: the trusted open source distribution of PostgreSQL. Works with IVYO, the open source Ivory Operator from Highgo." \
        io.k8s.display-name="Highgo IvorySQL" \
        io.openshift.tags="ivorysql,postgresql,postgres,postgis,sql,nosql,database,ha,highgo" \
        postgresql.version.major="${PG_MAJOR}" \
        postgresql.version="${PG_FULL}" \
        ivorysql.version.major="${IVY_MAJOR}" \
        ivorysql.version="${IVY_FULL}"

# set up crunchy directory
RUN mkdir -p /opt/crunchy/bin /opt/crunchy/conf /pgdata /pgwal /pgconf /backrestrepo

RUN useradd -u 998 ivorysql
RUN chown -R ivorysql:ivorysql /opt/crunchy /var/lib/pgsql \
                /pgdata /pgwal /pgconf /backrestrepo &&  \
        chmod -R g=u /opt/crunchy /var/lib/pgsql \
                /pgdata /pgwal /pgconf /backrestrepo

# open up the postgres port
EXPOSE 5432 5866

ADD bin/postgres_common /opt/crunchy/bin
ADD bin/common /opt/crunchy/bin
ADD conf/postgres_common /opt/crunchy/conf
ADD tools/pgmonitor/postgres_exporter/common /opt/crunchy/bin/modules/pgexporter
ADD tools/pgmonitor/postgres_exporter/linux /opt/crunchy/bin/modules/pgexporter

RUN mkdir /.ssh && chown 998:0 /.ssh && chmod g+rwx /.ssh && rm -f /run/nologin

# remove the default spool directory so that pgBackRest does not attempt to look there when
# performing a restore (pgBackRest will not have permissions to access to this dir in all envs)
RUN rm -rf /var/spool/pgbackrest

# add volumes to allow override of pg_hba.conf and postgresql.conf
# add volumes to allow storage of postgres WAL segment files
# add volumes to locate WAL files to recover with
# add volumes for pgbackrest to write to
# The VOLUME directive must appear after all RUN directives to ensure the proper
# volume permissions are applied when building the image
VOLUME ["/pgdata", "/pgwal", "/pgconf", "/backrestrepo", "/sshd"]

# Defines a unique directory name that will be utilized by the nss_wrapper in the UID script
ENV NSS_WRAPPER_SUBDIR="ivorysql"

ENTRYPOINT ["/opt/crunchy/bin/uid_postgres.sh"]

USER 998

CMD ["/opt/crunchy/bin/start.sh"]
